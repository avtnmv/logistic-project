{"ast":null,"code":"import _objectSpread from\"/Users/avtnmv/Documents/Front-End/logistics-project-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useEffect}from'react';export const useCurrentUser=()=>{const[currentUser,setCurrentUser]=useState(null);useEffect(()=>{// Получаем данные пользователя из localStorage\nconst storedUser=localStorage.getItem('currentUser');console.log('useCurrentUser: storedUser =',storedUser);if(storedUser){try{const userData=JSON.parse(storedUser);console.log('useCurrentUser: parsed userData =',userData);// Если у пользователя нет ID, создаем его\nif(!userData.id){console.log('⚠️ У пользователя нет ID, создаем новый...');const updatedUserData=_objectSpread(_objectSpread({},userData),{},{id:\"user_\".concat(Date.now(),\"_\").concat(Math.random().toString(36).substr(2,9))});// Обновляем в localStorage\nlocalStorage.setItem('currentUser',JSON.stringify(updatedUserData));console.log('✅ Новый ID создан:',updatedUserData.id);setCurrentUser(updatedUserData);}else{console.log('✅ У пользователя уже есть ID:',userData.id);setCurrentUser(userData);}}catch(error){console.warn('Ошибка парсинга данных пользователя:',error);}}else{console.log('useCurrentUser: пользователь не найден в localStorage');}},[]);return currentUser;};","map":{"version":3,"names":["useState","useEffect","useCurrentUser","currentUser","setCurrentUser","storedUser","localStorage","getItem","console","log","userData","JSON","parse","id","updatedUserData","_objectSpread","concat","Date","now","Math","random","toString","substr","setItem","stringify","error","warn"],"sources":["/Users/avtnmv/Documents/Front-End/logistics-project-react/src/hooks/useCurrentUser.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getGlobalTestDB } from '../data/testData';\n\nexport interface CurrentUser {\n  id: string;\n  phone: string;\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n}\n\nexport const useCurrentUser = (): CurrentUser | null => {\n  const [currentUser, setCurrentUser] = useState<CurrentUser | null>(null);\n\n  useEffect(() => {\n    // Получаем данные пользователя из localStorage\n    const storedUser = localStorage.getItem('currentUser');\n    console.log('useCurrentUser: storedUser =', storedUser);\n    \n    if (storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        console.log('useCurrentUser: parsed userData =', userData);\n        \n        // Если у пользователя нет ID, создаем его\n        if (!userData.id) {\n          console.log('⚠️ У пользователя нет ID, создаем новый...');\n          const updatedUserData = {\n            ...userData,\n            id: `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n          };\n          \n          // Обновляем в localStorage\n          localStorage.setItem('currentUser', JSON.stringify(updatedUserData));\n          console.log('✅ Новый ID создан:', updatedUserData.id);\n          \n          setCurrentUser(updatedUserData);\n        } else {\n          console.log('✅ У пользователя уже есть ID:', userData.id);\n          setCurrentUser(userData);\n        }\n      } catch (error) {\n        console.warn('Ошибка парсинга данных пользователя:', error);\n      }\n    } else {\n      console.log('useCurrentUser: пользователь не найден в localStorage');\n    }\n  }, []);\n\n  return currentUser;\n};\n"],"mappings":"8IAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAW3C,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAAA,GAA0B,CACtD,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGJ,QAAQ,CAAqB,IAAI,CAAC,CAExEC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAI,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CACtDC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAEJ,UAAU,CAAC,CAEvD,GAAIA,UAAU,CAAE,CACd,GAAI,CACF,KAAM,CAAAK,QAAQ,CAAGC,IAAI,CAACC,KAAK,CAACP,UAAU,CAAC,CACvCG,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAEC,QAAQ,CAAC,CAE1D;AACA,GAAI,CAACA,QAAQ,CAACG,EAAE,CAAE,CAChBL,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC,CACzD,KAAM,CAAAK,eAAe,CAAAC,aAAA,CAAAA,aAAA,IAChBL,QAAQ,MACXG,EAAE,SAAAG,MAAA,CAAUC,IAAI,CAACC,GAAG,CAAC,CAAC,MAAAF,MAAA,CAAIG,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,CAAE,CAAC,CAAC,CAAE,EACpE,CAED;AACAhB,YAAY,CAACiB,OAAO,CAAC,aAAa,CAAEZ,IAAI,CAACa,SAAS,CAACV,eAAe,CAAC,CAAC,CACpEN,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAEK,eAAe,CAACD,EAAE,CAAC,CAErDT,cAAc,CAACU,eAAe,CAAC,CACjC,CAAC,IAAM,CACLN,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAEC,QAAQ,CAACG,EAAE,CAAC,CACzDT,cAAc,CAACM,QAAQ,CAAC,CAC1B,CACF,CAAE,MAAOe,KAAK,CAAE,CACdjB,OAAO,CAACkB,IAAI,CAAC,sCAAsC,CAAED,KAAK,CAAC,CAC7D,CACF,CAAC,IAAM,CACLjB,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC,CACtE,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAAN,WAAW,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}