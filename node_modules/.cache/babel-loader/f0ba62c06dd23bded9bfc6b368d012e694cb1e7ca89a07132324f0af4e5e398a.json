{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport const useCurrentUser = () => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    // Получаем данные пользователя из localStorage\n    const storedUser = localStorage.getItem('currentUser');\n    console.log('useCurrentUser: storedUser =', storedUser);\n    if (storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        console.log('useCurrentUser: parsed userData =', userData);\n\n        // Если у пользователя нет ID, создаем его\n        if (!userData.id) {\n          console.log('⚠️ У пользователя нет ID, создаем новый...');\n          const updatedUserData = {\n            ...userData,\n            id: `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n          };\n\n          // Обновляем в localStorage\n          localStorage.setItem('currentUser', JSON.stringify(updatedUserData));\n          console.log('✅ Новый ID создан:', updatedUserData.id);\n          setCurrentUser(updatedUserData);\n        } else {\n          setCurrentUser(userData);\n        }\n      } catch (error) {\n        console.warn('Ошибка парсинга данных пользователя:', error);\n      }\n    } else {\n      console.log('useCurrentUser: пользователь не найден в localStorage');\n    }\n  }, []);\n  return currentUser;\n};\n_s(useCurrentUser, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");","map":{"version":3,"names":["useState","useEffect","useCurrentUser","_s","currentUser","setCurrentUser","storedUser","localStorage","getItem","console","log","userData","JSON","parse","id","updatedUserData","Date","now","Math","random","toString","substr","setItem","stringify","error","warn"],"sources":["/Users/avtnmv/Documents/Front-End/logistics-project-react/src/hooks/useCurrentUser.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getGlobalTestDB } from '../data/testData';\n\nexport interface CurrentUser {\n  id: string;\n  phone: string;\n  firstName?: string;\n  lastName?: string;\n}\n\nexport const useCurrentUser = (): CurrentUser | null => {\n  const [currentUser, setCurrentUser] = useState<CurrentUser | null>(null);\n\n  useEffect(() => {\n    // Получаем данные пользователя из localStorage\n    const storedUser = localStorage.getItem('currentUser');\n    console.log('useCurrentUser: storedUser =', storedUser);\n    \n    if (storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        console.log('useCurrentUser: parsed userData =', userData);\n        \n        // Если у пользователя нет ID, создаем его\n        if (!userData.id) {\n          console.log('⚠️ У пользователя нет ID, создаем новый...');\n          const updatedUserData = {\n            ...userData,\n            id: `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n          };\n          \n          // Обновляем в localStorage\n          localStorage.setItem('currentUser', JSON.stringify(updatedUserData));\n          console.log('✅ Новый ID создан:', updatedUserData.id);\n          \n          setCurrentUser(updatedUserData);\n        } else {\n          setCurrentUser(userData);\n        }\n      } catch (error) {\n        console.warn('Ошибка парсинга данных пользователя:', error);\n      }\n    } else {\n      console.log('useCurrentUser: пользователь не найден в localStorage');\n    }\n  }, []);\n\n  return currentUser;\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAU3C,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAA0B;EAAAC,EAAA;EACtD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAqB,IAAI,CAAC;EAExEC,SAAS,CAAC,MAAM;IACd;IACA,MAAMK,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACtDC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEJ,UAAU,CAAC;IAEvD,IAAIA,UAAU,EAAE;MACd,IAAI;QACF,MAAMK,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACP,UAAU,CAAC;QACvCG,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEC,QAAQ,CAAC;;QAE1D;QACA,IAAI,CAACA,QAAQ,CAACG,EAAE,EAAE;UAChBL,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;UACzD,MAAMK,eAAe,GAAG;YACtB,GAAGJ,QAAQ;YACXG,EAAE,EAAE,QAAQE,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;UACnE,CAAC;;UAED;UACAd,YAAY,CAACe,OAAO,CAAC,aAAa,EAAEV,IAAI,CAACW,SAAS,CAACR,eAAe,CAAC,CAAC;UACpEN,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEK,eAAe,CAACD,EAAE,CAAC;UAErDT,cAAc,CAACU,eAAe,CAAC;QACjC,CAAC,MAAM;UACLV,cAAc,CAACM,QAAQ,CAAC;QAC1B;MACF,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdf,OAAO,CAACgB,IAAI,CAAC,sCAAsC,EAAED,KAAK,CAAC;MAC7D;IACF,CAAC,MAAM;MACLf,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC;IACtE;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAON,WAAW;AACpB,CAAC;AAACD,EAAA,CAtCWD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}