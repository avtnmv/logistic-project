{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport const useCurrentUser = () => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    // Получаем данные пользователя из localStorage\n    const storedUser = localStorage.getItem('currentUser');\n    console.log('useCurrentUser: storedUser =', storedUser);\n    if (storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        console.log('useCurrentUser: parsed userData =', userData);\n        setCurrentUser(userData);\n      } catch (error) {\n        console.warn('Ошибка парсинга данных пользователя:', error);\n      }\n    } else {\n      console.log('useCurrentUser: пользователь не найден в localStorage');\n    }\n  }, []);\n  return currentUser;\n};\n_s(useCurrentUser, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");","map":{"version":3,"names":["useState","useEffect","useCurrentUser","_s","currentUser","setCurrentUser","storedUser","localStorage","getItem","console","log","userData","JSON","parse","error","warn"],"sources":["/Users/avtnmv/Documents/Front-End/logistics-project-react/src/hooks/useCurrentUser.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getGlobalTestDB } from '../data/testData';\n\nexport interface CurrentUser {\n  id: string;\n  phone: string;\n  firstName?: string;\n  lastName?: string;\n}\n\nexport const useCurrentUser = (): CurrentUser | null => {\n  const [currentUser, setCurrentUser] = useState<CurrentUser | null>(null);\n\n  useEffect(() => {\n    // Получаем данные пользователя из localStorage\n    const storedUser = localStorage.getItem('currentUser');\n    console.log('useCurrentUser: storedUser =', storedUser);\n    \n    if (storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        console.log('useCurrentUser: parsed userData =', userData);\n        setCurrentUser(userData);\n      } catch (error) {\n        console.warn('Ошибка парсинга данных пользователя:', error);\n      }\n    } else {\n      console.log('useCurrentUser: пользователь не найден в localStorage');\n    }\n  }, []);\n\n  return currentUser;\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAU3C,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAA0B;EAAAC,EAAA;EACtD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAqB,IAAI,CAAC;EAExEC,SAAS,CAAC,MAAM;IACd;IACA,MAAMK,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACtDC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEJ,UAAU,CAAC;IAEvD,IAAIA,UAAU,EAAE;MACd,IAAI;QACF,MAAMK,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACP,UAAU,CAAC;QACvCG,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEC,QAAQ,CAAC;QAC1DN,cAAc,CAACM,QAAQ,CAAC;MAC1B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdL,OAAO,CAACM,IAAI,CAAC,sCAAsC,EAAED,KAAK,CAAC;MAC7D;IACF,CAAC,MAAM;MACLL,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC;IACtE;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAON,WAAW;AACpB,CAAC;AAACD,EAAA,CAtBWD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}